plugins {
    id 'com.android.application'
}

android {
    flavorDimensions 'vendor'
    buildToolsVersion rootProject.ext.buildToolsVersion
    compileSdkVersion rootProject.ext.targetSdkVersion

    defaultConfig {
        applicationId "com.home.vod"
        minSdkVersion rootProject.ext.minimumSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true


        Properties properties = new Properties()
        properties.load(project.rootProject.file('gradle.properties').newDataInputStream())

        buildConfigField "String", "AUTH_TOKEN", "\"${properties.getProperty('AUTH_TOKEN')}\""
        buildConfigField "String", "SERVICE_BASE_PATH", "\"${properties.getProperty('SERVICE_BASE_PATH')}\""
    }
    dexOptions {
        javaMaxHeapSize "4g"
        preDexLibraries = false
    }
    compileOptions {
        sourceCompatibility rootProject.ext.javaVersion
        targetCompatibility rootProject.ext.javaVersion
    }
    buildTypes {
        release {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    // Add this block and enable/disable the parameters as follows
    bundle {
        density {
            // Different APKs are generated for devices with different screen densities; true by default.
            enableSplit true
        }
        abi {
            // Different APKs are generated for devices with different CPU architectures; true by default.
            enableSplit true
        }
        language {
            // This is disabled so that the App Bundle does NOT split the APK for each language.
            // We're gonna use the same APK for all languages.
            enableSplit false
        }
    }

    dataBinding{
        enabled true
    }
}


android {
    useLibrary 'org.apache.http.legacy'
}


dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.coordinatorlayout:coordinatorlayout:1.1.0'
    androidTestImplementation('androidx.test.espresso:espresso-core:3.1.0', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'

    implementation project(':apisdk')

    implementation files('libs/wasabi.jar')
    implementation('com.spotxchange:spotx-sdk-android:4.4.1') {
        transitive = false
    }
    implementation 'com.nineoldandroids:library:2.4.0', rootProject.ext.exclude
    implementation 'com.pkmmte.view:circularimageview:1.1', rootProject.ext.exclude
    implementation 'com.squareup.picasso:picasso:2.5.2', rootProject.ext.exclude
    implementation 'io.card:android-sdk:5.4.0', rootProject.ext.exclude
    implementation 'com.daimajia.slider:library:1.1.5@aar', rootProject.ext.exclude
    implementation 'com.googlecode.android-query:android-query:0.25.9', rootProject.ext.exclude
    implementation 'androidx.multidex:multidex:2.0.0', rootProject.ext.exclude
    implementation 'com.google.ads.interactivemedia.v3:interactivemedia:3.9.4', rootProject.ext.exclude
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3', rootProject.ext.exclude
    implementation 'androidx.multidex:multidex:2.0.0', rootProject.ext.exclude
    implementation 'com.theartofdev.edmodo:android-image-cropper:2.6.0', rootProject.ext.exclude
    implementation "com.github.bumptech.glide:glide:$rootProject.ext.glideVersion", rootProject.ext.exclude
    annotationProcessor "com.github.bumptech.glide:compiler:$rootProject.ext.glideVersion", rootProject.ext.exclude
    implementation 'androidx.legacy:legacy-support-v4:1.0.0', rootProject.ext.exclude

    implementation 'com.facebook.shimmer:shimmer:0.5.0'
    implementation 'pl.droidsonroids.gif:android-gif-drawable:1.2.17'
    implementation 'jp.co.cyberagent.android:gpuimage:2.1.0'

    implementation 'androidx.mediarouter:mediarouter:1.0.0', rootProject.ext.exclude
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.palette:palette:1.0.0'
    implementation 'androidx.media:media:1.1.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'jp.wasabeef:glide-transformations:4.0.0'
    implementation 'com.google.code.gson:gson:2.8.1'
    implementation 'com.facebook.stetho:stetho:1.5.1'
    implementation 'com.facebook.stetho:stetho-okhttp:1.5.1'
    implementation 'com.github.sokolyaka:androidsizes:1.0.4'
    implementation 'com.danikula:videocache:2.7.1'


    implementation 'com.intuit.sdp:sdp-android:1.0.5'

    // EXO-PLAYER
    implementation 'com.google.android.exoplayer:extension-ima:2.13.2'
    implementation 'com.google.android.exoplayer:exoplayer:2.13.3'

    implementation 'androidx.biometric:biometric:1.0.1'

    implementation 'com.github.checkout:frames-android:3.0.1'
    implementation 'com.android.support:design:28.0.0'

    //viewpager2
    implementation "androidx.viewpager2:viewpager2:1.0.0"
    implementation 'com.romandanylyk:pageindicatorview:1.0.3'
    implementation 'com.android.installreferrer:installreferrer:2.2'
    implementation 'com.adjust.sdk:adjust-android:4.28.4'

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.crystal:crystalrangeseekbar:1.1.3'
    implementation 'com.linkedin.android.litr:litr:1.4.5'
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'
    implementation 'androidx.work:work-runtime:2.7.1'
    implementation 'com.karumi:dexter:6.2.3'
    implementation 'com.otaliastudios:autocomplete:1.1.0'
    implementation 'com.github.freddyfang:android-video-trimmer:v1.0.0'

    //image cropping
    implementation 'com.isseiaoki:simplecropview:1.1.8'

    implementation 'com.github.pzienowicz:androidx-auto-scroll-view-pager:1.4.0'

}

task copyJniLibs(type: Copy) {
    from 'libs/armeabi'
    into 'src/main/jniLibs/armeabi'
}
tasks.withType(JavaCompile) {
    compileTask -> compileTask.dependsOn(copyJniLibs)
}
clean.dependsOn 'cleanCopyJniLibs'

def gitBranch() {
    def branch = ""
    def proc = "git rev-parse --abbrev-ref HEAD".execute()
    proc.in.eachLine { line -> branch = line }
    proc.err.eachLine { line -> println line }
    proc.waitFor()
    branch
}

apply plugin: 'kotlin-android'

